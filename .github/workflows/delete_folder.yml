name: 并行50删除 OneDrive 文件夹

on:
  workflow_dispatch:  # 允许手动触发
  schedule:
    - cron: '0 0 * * *'  # 每天午夜更新 cron 任务

jobs:
  update-cron:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库
        uses: actions/checkout@v3

      - name: 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: 安装依赖
        run: |
          python -m pip install random

      - name: 生成随机 cron 表达式
        id: generate_cron
        run: |
          mkdir -p scripts
          echo "import random; print(f'{random.randint(30, 58)} * * * *')" > scripts/generate_cron.py
          cron_expression=$(python scripts/generate_cron.py)
          echo "::set-output name=cron_expression::$cron_expression"

      - name: 更新 GitHub Actions 工作流程
        run: |
          cron_expression=${{ steps.generate_cron.outputs.cron_expression }}
          echo "name: 并行50删除 OneDrive 文件夹" > .github/workflows/delete_folder.yml
          echo "on:" >> .github/workflows/delete_folder.yml
          echo "  schedule:" >> .github/workflows/delete_folder.yml
          echo "    - cron: '$cron_expression'" >> .github/workflows/delete_folder.yml
          echo "  workflow_dispatch:  # 允许手动触发" >> .github/workflows/delete_folder.yml
          echo "" >> .github/workflows/delete_folder.yml
          echo "jobs:" >> .github/workflows/delete_folder.yml
          echo "  delete-folder:" >> .github/workflows/delete_folder.yml
          echo "    runs-on: ubuntu-latest" >> .github/workflows/delete_folder.yml
          echo "    steps:" >> .github/workflows/delete_folder.yml
          echo "      - name: 检出仓库" >> .github/workflows/delete_folder.yml
          echo "        uses: actions/checkout@v3" >> .github/workflows/delete_folder.yml
          echo "      - name: 设置 Python 环境" >> .github/workflows/delete_folder.yml
          echo "        uses: actions/setup-python@v4" >> .github/workflows/delete_folder.yml
          echo "        with:" >> .github/workflows/delete_folder.yml
          echo "          python-version: '3.9'" >> .github/workflows/delete_folder.yml
          echo "      - name: 安装依赖" >> .github/workflows/delete_folder.yml
          echo "        run: |" >> .github/workflows/delete_folder.yml
          echo "          python -m pip install requests msal" >> .github/workflows/delete_folder.yml
          echo "          python -c \"import requests; import msal; print('依赖安装成功')\"" >> .github/workflows/delete_folder.yml
          echo "      - name: 删除 OneDrive 文件夹" >> .github/workflows/delete_folder.yml
          echo "        env:" >> .github/workflows/delete_folder.yml
          echo "          USER_ACCOUNTS: \${{ secrets.USER_ACCOUNTS }}  # 包含多个帐户信息的 JSON 字符串" >> .github/workflows/delete_folder.yml
          echo "        run: |" >> .github/workflows/delete_folder.yml
          echo "          python - <<EOF" >> .github/workflows/delete_folder.yml
          echo "          import os" >> .github/workflows/delete_folder.yml
          echo "          import requests" >> .github/workflows/delete_folder.yml
          echo "          from msal import ConfidentialClientApplication" >> .github/workflows/delete_folder.yml
          echo "          from time import sleep" >> .github/workflows/delete_folder.yml
          echo "          import json" >> .github/workflows/delete_folder.yml
          echo "          from concurrent.futures import ThreadPoolExecutor, as_completed" >> .github/workflows/delete_folder.yml
          echo "" >> .github/workflows/delete_folder.yml
          echo "          user_accounts = json.loads(os.getenv('USER_ACCOUNTS'))" >> .github/workflows/delete_folder.yml
          echo "" >> .github/workflows/delete_folder.yml
          echo "          def delete_folder(folder_path, access_token, user_email):" >> .github/workflows/delete_folder.yml
          echo "              url = f'https://graph.microsoft.com/v1.0/me/drive/root:/{folder_path}'" >> .github/workflows/delete_folder.yml
          echo "              headers = {" >> .github/workflows/delete_folder.yml
          echo "                  'Authorization': f'Bearer {access_token}'" >> .github/workflows/delete_folder.yml
          echo "              }" >> .github/workflows/delete_folder.yml
          echo "" >> .github/workflows/delete_folder.yml
          echo "              max_retries = 3" >> .github/workflows/delete_folder.yml
          echo "              for attempt in range(max_retries):" >> .github/workflows/delete_folder.yml
          echo "                  try:" >> .github/workflows/delete_folder.yml
          echo "                      print(f'尝试删除文件夹 {folder_path} (第 {attempt + 1} 次) 用户 {user_email}')" >> .github/workflows/delete_folder.yml
          echo "                      response = requests.delete(url, headers=headers, timeout=10)" >> .github/workflows/delete_folder.yml
          echo "                      if response.status_code == 204:" >> .github/workflows/delete_folder.yml
          echo "                          print(f'用户 {user_email} 的文件夹 {folder_path} 删除成功！')" >> .github/workflows/delete_folder.yml
          echo "                          break" >> .github/workflows/delete_folder.yml
          echo "                      else:" >> .github/workflows/delete_folder.yml
          echo "                          print(f'删除失败，用户 {user_email}，状态码：{response.status_code}, 响应内容：{response.text}')" >> .github/workflows/delete_folder.yml
          echo "                  except requests.exceptions.RequestException as e:" >> .github/workflows/delete_folder.yml
          echo "                      print(f'请求失败，用户 {user_email}，错误信息：{e}')" >> .github/workflows/delete_folder.yml
          echo "                  sleep(5)  # 等待 5 秒后重试" >> .github/workflows/delete_folder.yml
          echo "              else:" >> .github/workflows/delete_folder.yml
          echo "                  print(f'多次尝试后仍未能删除用户 {user_email} 的文件夹 {folder_path}')" >> .github/workflows/delete_folder.yml
          echo "" >> .github/workflows/delete_folder.yml
          echo "          def process_account(account):" >> .github/workflows/delete_folder.yml
          echo "              client_id = account['client_id']" >> .github/workflows/delete_folder.yml
          echo "              client_secret = account['client_secret']" >> .github/workflows/delete_folder.yml
          echo "              tenant_id = account['tenant_id']" >> .github/workflows/delete_folder.yml
          echo "              user_email = account['email']" >> .github/workflows/delete_folder.yml
          echo "              user_password = account['password']" >> .github/workflows/delete_folder.yml
          echo "" >> .github/workflows/delete_folder.yml
          echo "              print(f'处理用户 {user_email}')" >> .github/workflows/delete_folder.yml
          echo "" >> .github/workflows/delete_folder.yml
          echo "              # 初始化 MSAL 应用" >> .github/workflows/delete_folder.yml
          echo "              app = Confiden
